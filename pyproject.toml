[tool.poetry]
name = "cellseg_models.pytorch"
version = "0.1.0"
description = "Cell/Nuclei segmentation models for pytorch. Extends segmentation_models.pytorch"
authors = ["Okunator <oskari.lehtonen@helsinki.fi>"]
license = "MIT"

[tool.poetry.dependencies]
python = "^3.7.1,<3.10"
torch = "^1.7"
torchvision = "^0.8"
numpy = "^1.21"
pandas = "^1.3"
scipy = "^1.7"
scikit-image = "^0.19"
torch-optimizer = "^0.3"
pytorch-lightning = "^1.3"
albumentations = "1.1"
pathos = "^0.2.8"
torchmetrics = "^0.3.0"
opencv-python = "^4.2.0.32"
black = "^21.12b0"

[tool.poetry.dev-dependencies]
pytest = "^6.2.5"
pytest-cov = "^3.0.0"
pytest-xdist = "^2.5.0"
tox = "^3.24.5"
flake8 = "^4.0.1"
flake8-docstrings = "^1.6.0"
flake8-bugbear = "^22.1.11"
pyproject-flake8 = "^0.0.1-alpha.2"
pre-commit = "^2.17.0"
matplotlib = "^3.5.1"
mypy = "^0.931"
isort = "^5.10.1"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = "-ra -v"
markers = ["cuda (deselect with '-m \"nocuda\"')"]

[tool.tox]
legacy_tox_ini = """
[tox]
minversion = 3.24.0
envlist = py37
skipsdist = true

[testenv]
whitelist_externals = poetry
platform = linux
deps =
    pytest >= 6.0.0, < 6.3.0

commands =
    poetry install -v
    poetry run pytest --cov
"""

[tool.isort]
profile = "black"
skip = [".gitignore", ".dockerignore", ".md", ".json"]
multi_line_output = 3

[tool.black]
line-length = 88

[tool.flake8]
max-line-length = 88
extend-ignore = "E203,D103,D104,"
max-complexity = 10
exclude = ".git,__pycache__,docs/source/conftest.py,old,build,dist,test,tests"

[tool.coverage.run]
source = ["cellseg_models_pytorch"]

[tool.coverage.report]
exclude_lines = ["raise TypeError", "raise NotImplementedError", "raise ValueError"]

[tool.mypy]
warn_return_any = false
warn_unused_configs = true
ignore_missing_imports = true
plugins = "numpy.typing.mypy_plugin"

[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"
